{"version":3,"sources":["serviceWorker.js","Launch/Tile.js","Launch/links.js","Launch/Tiles.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","Tile","icon","link","name","className","href","src","alt","getIcon","fileName","links","Tiles","map","index","key","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fea14134.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Tile = ({ icon, link, name }) => {\n  return (\n    <div className=\"tile\">\n      <a className=\"tile-link\" href={link}>\n        <div className=\"title-icon-container\">\n          <img className=\"tile-icon\" src={icon} alt=\"\" />\n        </div>\n        <div className=\"tile-name\">{name}</div>\n      </a>\n    </div>\n  );\n};\n\nTile.propTypes = {\n  icon: PropTypes.string.isRequired, // URL to icon\n  link: PropTypes.string.isRequired, // URL to launch\n  name: PropTypes.string.isRequired // name of tile\n};\n","const getIcon = fileName => `https://peterneely.github.io/icons/${fileName}`\n\n\nexport const links = [\n  { name: '1Password', link: 'http://neelys.1password.com/', icon: getIcon('1password.png') },\n  { name: 'AT&T', link: 'http://www.att.com/', icon: getIcon('att.png') },\n  { name: 'Aetna', link: 'https://health.aetna.com', icon: getIcon('aetna.png') },\n  { name: 'Ally', link: 'http://secure.ally.com/#/dashboard', icon: getIcon('ally.jpg') },\n  { name: 'AlternativeTo', link: 'http://alternativeto.net/', icon: getIcon('alternativeto.png') },\n  { name: 'Amazon', link: 'http://amazon.com/', icon: getIcon('amazon.png') },\n  { name: 'American Express', link: 'http://www.americanexpress.com/', icon: getIcon('amex.png') },\n  { name: 'Apple Developer Forums', link: 'http://forums.developer.apple.com/welcome', icon: getIcon('xcode.png') },\n  { name: 'Apple', link: 'http://www.apple.com/', icon: getIcon('apple.png') },\n  { name: 'Bank of America', link: 'http://www.bankofamerica.com/', icon: getIcon('bofa.png') },\n  { name: 'Best Parking', link: 'http://losangeles.bestparking.com/', icon: getIcon('bestparking.png') },\n  { name: 'Bitbucket', link: 'http://bitbucket.org/dashboard/overview', icon: getIcon('bitbucket.png') },\n  { name: 'CanIUse', link: 'http://caniuse.com/', icon: getIcon('caniuse.png') },\n  { name: 'Chase', link: 'http://cards.chase.com/cc/Account/Activity/561745339', icon: getIcon('chase.png') },\n  { name: 'Cigna', link: 'http://my.cigna.com/web/secure/my/coverage/dental', icon: getIcon('cigna.png') },\n  { name: 'Code School', link: 'http://www.codeschool.com/', icon: getIcon('codeschool.jpg') },\n  { name: 'CodeSandbox', link: 'http://codesandbox.io/s/vanilla', icon: getIcon('codesandbox.png') },\n  { name: 'Craigslist', link: 'http://losangeles.craigslist.org/search/cta?sort=date&max_price=2500&auto_title_status=1&auto_bodytype=8&query=torrance', icon: getIcon('craigslist.png') },\n  { name: 'Credit Karma', link: 'http://www.creditkarma.com/dashboard', icon: getIcon('creditkarma.png') },\n  { name: 'Dropbox', link: 'http://www.dropbox.com/home', icon: getIcon('dropbox.jpg') },\n  { name: 'ES6', link: 'http://kangax.github.io/compat-table/es6/', icon: getIcon('es6.png') },\n  { name: 'Egghead', link: 'http://egghead.io/', icon: getIcon('egghead.jpg') },\n  { name: 'Experian ID Notify', link: 'http://services.idnotify.com/dashboard', icon: getIcon('idnotify.png') },\n  { name: 'Fast', link: 'http://fast.com/', icon: getIcon('fast.png') },\n  { name: 'Feedly', link: 'http://feedly.com/', icon: getIcon('feedly.png') },\n  { name: 'Firebase', link: 'http://console.firebase.google.com/u/0/', icon: getIcon('firebase.png') },\n  { name: 'FlightAware', link: 'http://flightaware.com/', icon: getIcon('flightaware.png') },\n  { name: 'Geico', link: 'http://ecams.geico.com/ecams/login.xhtml?msgid=MSG150_8', icon: getIcon('geico.jpeg') },\n  { name: 'Giphy', link: 'http://giphy.com/', icon: getIcon('giphy.png') },\n  { name: 'GitHub Peter', link: 'http://github.com/peterneely?tab=repositories', icon: getIcon('github-peter.png') },\n  { name: 'GitHub Sony', link: 'http://github.sie.sony.com/SIE-Private/SCP', icon: getIcon('github-sony.png') },\n  { name: 'Google One', link: 'http://one.google.com/', icon: getIcon('googleOne.jpg') },\n  { name: 'Google Translate', link: 'http://translate.google.com/', icon: getIcon('translate.png') },\n  { name: 'Gravatar', link: 'http://en.gravatar.com/', icon: getIcon('gravatar.jpg') },\n  { name: 'HTML5 Please', link: 'http://html5please.com/', icon: getIcon('html5please.jpg') },\n  { name: 'Harvest', link: 'http://pneely.harvestapp.com/time', icon: getIcon('harvest.png') },\n  { name: 'Heroku', link: 'http://dashboard.heroku.com/apps', icon: getIcon('heroku.png') },\n  { name: 'Homebridge', link: 'http://financingaccountconnect.com/Homebridge/LoanService/accounts/accountDetail/0', icon: getIcon('homebridge.jpg') },\n  { name: 'JWT', link: 'http://jwt.io/', icon: getIcon('jwt.svg') },\n  { name: 'Jen Simmons Labs', link: 'http://labs.jensimmons.com/', icon: getIcon('jenlabs.png') },\n  { name: 'Kaiser Permanente', link: 'http://healthy.kaiserpermanente.org/health/mycare/consumer/my-health-manager', icon: getIcon('kaiser.png') },\n  { name: 'King\\'s HArbor', link: 'http://kingsharbor.org/', icon: getIcon('khc.jpg') },\n  { name: 'Lloyds Bank', link: 'http://online.lloydsbank.co.uk/personal/logon/login.jsp', icon: getIcon('lloyds.jpg') },\n  { name: 'Logix', link: 'http://olb.logixbanking.com/User/MainAccounts/List', icon: getIcon('logix.png') },\n  { name: 'Microsoft', link: 'http://stores.office.com/myaccount/home.aspx?ui=en-US&rs=en-GB&ad=GB&s=1&auth=0&fromAR=3', icon: getIcon('microsoft.png') },\n  { name: 'MongoDB', link: 'http://cloud.mongodb.com/v2/5b29a4710bd66b2c58f13b28#clusters?tooltip=nds.security&step=0', icon: getIcon('mongodb-atlas.png') },\n  { name: 'Netflix', link: 'http://dvd.netflix.com/MemberHome', icon: getIcon('netflixdvd.jpg') },\n  { name: 'Node', link: 'http://node.green/', icon: getIcon('nodegreen.png') },\n  { name: 'Parallels Access', link: 'http://access.parallels.com/#/computers/', icon: getIcon('parallels.jpg') },\n  { name: 'PlaneFinder', link: 'http://planefinder.net/', icon: getIcon('planefinder.png') },\n  { name: 'Plunkr', link: 'http://plnkr.co/edit/?p=catalogue', icon: getIcon('plunkr.png') },\n  { name: 'Portainer', link: 'http://localhost:9000/#/containers/', icon: getIcon('portainer.png') },\n  { name: 'PowerSchool', link: 'http://torrance.powerschool.com/guardian/home.html', icon: getIcon('powerschool.png') },\n  { name: 'Providence', link: 'http://mychartor.providence.org/mychart/', icon: getIcon('providence.png') },\n  { name: 'React Style Guide: AirBnB', link: 'http://github.com/airbnb/javascript/tree/master/react#naming', icon: getIcon('react.png') },\n  { name: 'Regex 101', link: 'http://regex101.com/', icon: getIcon('regex101.jpg') },\n  { name: 'Repl-it', link: 'http://repl.it/languages/javascript', icon: getIcon('replit.png') },\n  { name: 'SVG Editor', link: 'http://petercollingridge.appspot.com/svg-editor', icon: getIcon('svg.png') },\n  { name: 'SoCalGas', link: 'http://myaccount.socalgas.com/myAccount/newscg.portal', icon: getIcon('socalgas.jpg') },\n  { name: 'Stackblitz', link: 'http://stackblitz.com/', icon: getIcon('stackblitz.png') },\n  { name: 'Synchrony', link: 'http://consumercenter.mysynchrony.com/consumercenter/homeaction.do?strutsToken=tokenValue&tokenValue=90YB-29G9-Z06G-JIJV-3QGD-W61K-5L9D-648B-EMZQ-01IQ', icon: getIcon('synchrony.png') },\n  { name: 'Team Treehouse', link: 'http://teamtreehouse.com/library', icon: getIcon('treehouse.png') },\n  { name: 'Thinkster', link: 'http://thinkster.io/', icon: getIcon('thinkster.png') },\n  { name: 'Trello', link: 'http://trello.com/', icon: getIcon('trello.png') },\n  { name: 'TurboTax', link: 'http://myturbotax.intuit.com/inprogress/', icon: getIcon('turbotax.jpg') },\n  { name: 'TutsPlus', link: 'http://code.tutsplus.com/', icon: getIcon('tuts.png') },\n  { name: 'TutsPlus', link: 'http://tutsplus.com/account/courses', icon: getIcon('tuts.png') },\n  { name: 'Uber', link: 'http://riders.uber.com/trips', icon: getIcon('uber.jpg') },\n  { name: 'Venmo', link: 'http://venmo.com/peterneely', icon: getIcon('venmo.png') },\n  { name: 'px to em', link: 'http://pxtoem.com/', icon: getIcon('pxtoem.png') },\n  // { name: '', link: '', icon: getIcon('') },\n  // { name: '', link: '', icon: getIcon('') },\n];\n\n// http://www.ebay.com/\n// ebay.jpg\n\n// http://www.facebook.com/login.php\n// fb.png\n\n// http://www.google.com/flights/\n// flights.png\n\n// http://www.hulu.com/\n// hulu.jpg\n\n// http://www.imdb.com/\n// imdb.png\n\n// http://www.justwatch.com/us/provider/netflix\n// justwatch.png\n\n// http://www.lafitness.com/Pages/billinghistory.aspx?scr=receipts\n// lafitness.png\n\n// http://www.linkedin.com/in/pgneely\n// linkedin.jpg\n\n// http://www.meetup.com/find/\n// meetup.png\n\n// http://www.mycarfax.com/\n// mycarfax.png\n\n// http://www.netflix.com/\n// netflix.png\n\n// http://www.ourgroceries.com/your-lists/list/IkFiAxpB0g3JdigiZj_U3q\n// ourgroceries.png\n\n// http://www.parkme.com/los-angeles-parking\n// parkme.png\n\n// http://www.paypal.com/myaccount/home\n// paypal.png\n\n// http://www.pluralsight.com/\n// pluralsight.png\n\n// http://www.raywenderlich.com/\n// raywenderlich.png\n\n// http://www.regexr.com/\n// regexr.png\n\n// http://www.sce.com/wps/myportal/home/mysce/myaccount\n// sce.jpg\n\n// http://www.seatguru.com/\n// seatguru.jpg\n\n// http://www.shazam.com/myshazam\n// shazam.png\n\n// http://www.spectrum.net/login/\n// spectrum.png\n\n// http://www.udemy.com/courses/\n// udemy.svg\n\n// http://www.vsp.com/benefits-detail.html\n// vsp.JPG\n\n// http://www.yelp.com/torrance-ca-us\n// yelp.jpeg\n\n// http://www.youtube.com/\n// youtube.svg\n\n// http://wwws.mint.com/overview.event\n// mint.png\n\n// https://www.w3schools.com/colors/colors_mixer.asp\n// colors.gi\n","import React from \"react\";\nimport { Tile } from \"./Tile\";\nimport { links } from \"./links\";\nimport './launch.scss';\n\nexport const Tiles = () => {\n  return (\n    <main className=\"tiles\">\n      {links.map(({ icon, link, name }, index) => (\n        <Tile icon={icon} key={index} link={link} name={name} />\n      ))}\n    </main>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Tiles } from './Launch/Tiles';\nimport './app.scss';\n\nexport const App = () => {\n  return <div className=\"app\"><Tiles /></div>;\n};\n"],"sourceRoot":""}